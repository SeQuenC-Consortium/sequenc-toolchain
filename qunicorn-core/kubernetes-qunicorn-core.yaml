---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yaml --out kubernetes-deployment.yaml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: server
  name: server
  namespace: default
spec:
  ports:
    - name: "5005"
      port: 5005
      targetPort: 5005
  selector:
    io.kompose.service: server
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yaml --out kubernetes-deployment.yaml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: broker
  name: broker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: broker
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yaml --out kubernetes-deployment.yaml
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/qunicorn-core-qunicorn: "true"
        io.kompose.service: broker
    spec:
      containers:
        - image: redis:7.0.12
          name: broker
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yaml --out kubernetes-deployment.yaml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yaml --out kubernetes-deployment.yaml
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/qunicorn-core-qunicorn: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_DB
              value: qunicorn
            - name: POSTGRES_PASSWORD
              value: passwd
          image: postgres:15.3
          name: postgres
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yaml --out kubernetes-deployment.yaml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: server
  name: server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: server
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yaml --out kubernetes-deployment.yaml
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/qunicorn-core-qunicorn: "true"
        io.kompose.service: server
    spec:
      containers:
        - env:
            - name: BROKER_URL
              value: redis://broker:6379
            - name: CONTAINER_MODE
              value: server
            - name: DB_URL
              value: postgresql://postgres:passwd@postgres/qunicorn
            - name: SERVER_PORT
              value: "5005"
          image: qunicorn:local
          name: server
          imagePullPolicy: Never
          ports:
            - containerPort: 5005
              hostPort: 5005
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yaml --out kubernetes-deployment.yaml
    kompose.version: 1.30.0 (9d8dcb518)
  creationTimestamp: null
  labels:
    io.kompose.service: worker
  name: worker
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: worker
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f .\docker-compose.yaml --out kubernetes-deployment.yaml
        kompose.version: 1.30.0 (9d8dcb518)
      creationTimestamp: null
      labels:
        io.kompose.network/qunicorn-core-qunicorn: "true"
        io.kompose.service: worker
    spec:
      containers:
        - env:
            - name: BROKER_URL
              value: redis://broker:6379
            - name: CONTAINER_MODE
              value: worker
            - name: DB_URL
              value: postgresql://postgres:passwd@postgres/qunicorn
          image: qunicorn:local
          imagePullPolicy: Never
          name: worker
          resources: {}
      restartPolicy: Always
status: {}

