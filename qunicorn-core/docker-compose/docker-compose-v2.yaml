version: "3"
services:
  server:
    image: ghcr.io/qunicorn/qunicorn-core:main
    networks:
      - qunicorn
    environment:
      CONTAINER_MODE: server
      SERVER_PORT: 8080
      BROKER_URL: "redis://broker:6379"
      DB_URL: "postgresql+psycopg://postgres:passwd@postgres/qunicorn"
      JWKS_URL: "http://keycloak:8080/auth/realms/qunicorn/protocol/openid-connect/certs"
      NUMBA_CACHE_DIR: "/app/cache"
    depends_on:
      - postgres
      - broker
    ports:
      - "8080:8080"
    labels:
      kompose.service.expose: "true"
      kompose.service.type: "loadbalancer"

  worker:
    image: ghcr.io/qunicorn/qunicorn-core:main
    networks:
      - qunicorn
    environment:
      CONTAINER_MODE: worker
      BROKER_URL: "redis://broker:6379"
      DB_URL: "postgresql+psycopg://postgres:passwd@postgres/qunicorn"
      NUMBA_CACHE_DIR: "/app/cache"
      # QMWARE_API_KEY: ""
      # QMWARE_API_KEY_ID: ""
    depends_on:
      - postgres
      - broker
    ports:
      - "6379"

  keycloak:
    image: jboss/keycloak
    networks:
      - qunicorn
    depends_on:
      - keycloak_postgres
    ports:
      - "8081:8080"
    volumes:
      - "./resources/keycloak-realm-export.json:/tmp/realm-export.json"
    environment:
      DB_VENDOR: postgres
      KEYCLOAK_USER: kc_user
      KEYCLOAK_PASSWORD: kc_pass
      DB_ADDR: keycloak_postgres
      DB_USER: postgres
      DB_PASSWORD: passwd
      KEYCLOAK_IMPORT=/tmp/realm-export.json:

  keycloak_postgres:
    image: postgres:15.3
    networks:
      - qunicorn
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: passwd
      POSTGRES_DB: keycloak
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data \

  broker:
    image: redis:7.0.12
    networks:
      - qunicorn
    ports:
      - "6379:6379"

  postgres:
    image: postgres:15.3
    networks:
      - qunicorn
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: passwd
      POSTGRES_DB: qunicorn
    volumes:
      - pgdata:/var/lib/postgresql/data \
    ports:
      - "5432:5432"

  # QuilC and QVM Servers are commented out, as rigetti is an experimental feature and not running on docker.
  #quilc:
  #  image: rigetti/quilc
  #  command: -S -p 5555
  #  ports:
  #    - '5555:5555'
  #  networks:
  #    - qunicorn
  #  volumes:
  #    - ./inc:/inc

  #qvm:
  #  image: rigetti/qvm
  #  command: -S -p 5000
  #  ports:
  #    - '5000:5000'
  #  networks:
  #    - qunicorn

networks:
  qunicorn:

volumes:
  pgdata:
  keycloak_pgdata:
